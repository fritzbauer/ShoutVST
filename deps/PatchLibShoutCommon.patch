From f144f92ac4f39a10911e8d824abd54969c54c625 Mon Sep 17 00:00:00 2001
From: roubro1991 <roubro1991@gmx.de>
Date: Mon, 6 Sep 2021 08:40:23 +0200
Subject: [PATCH] Patched to be able to build ShoutVST on windows using MSVC.
 Based on 5de3e8b3b063002d8a9f52122e97f721e1742531

---
 httpp/encoding.c | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/httpp/encoding.c b/httpp/encoding.c
index 1651d63..5d45e59 100644
--- a/httpp/encoding.c
+++ b/httpp/encoding.c
@@ -81,7 +81,7 @@ ssize_t __copy_buffer(void *dst, void **src, size_t *boffset, size_t *blen, size
         return -1;
 
     have_len = *blen - *boffset;
-    p = *src + *boffset;
+    p = *(char*)src + *boffset;
 
     todo = len < have_len ? len : have_len;
 
@@ -104,7 +104,7 @@ static inline void __flush_output(httpp_encoding_t *self, ssize_t (*cb)(void*, c
 {
     if (cb && self->buf_write_encoded) {
         ssize_t ret = cb(userdata,
-                         self->buf_write_encoded + self->buf_write_encoded_offset,
+            (char*)self->buf_write_encoded + self->buf_write_encoded_offset,
                          self->buf_write_encoded_len - self->buf_write_encoded_offset);
         if (ret > 0) {
             self->buf_write_encoded_offset += ret;
@@ -255,7 +255,7 @@ ssize_t           httpp_encoding_read(httpp_encoding_t *self, void *buf, size_t
 
     if (ret > 0) {
         done += ret;
-        buf  += ret;
+        (char*)buf  += ret;
         len  -= ret;
     }
 
@@ -266,14 +266,14 @@ ssize_t           httpp_encoding_read(httpp_encoding_t *self, void *buf, size_t
         return -1;
 
     done += ret;
-    buf  += ret;
+    (char*)buf  += ret;
     len  -= ret;
 
     if (len) {
         ret = __copy_buffer(buf, &(self->buf_read_decoded), &(self->buf_read_decoded_offset), &(self->buf_read_decoded_len), len);
         if (ret > 0) {
             done += ret;
-            buf  += ret;
+            (char*)buf  += ret;
             len  -= ret;
         }
     }
@@ -530,7 +530,7 @@ static ssize_t __enc_chunked_read(httpp_encoding_t *self, void *buf, size_t len,
 
     self->buf_read_raw = bufptr;
 
-    ret = cb(userdata, self->buf_read_raw + self->buf_read_raw_len, buflen);
+    ret = cb(userdata, (char*)self->buf_read_raw + self->buf_read_raw_len, buflen);
     if (ret < 1) {
         if (!self->buf_read_raw_len) {
             free(self->buf_read_raw);
@@ -586,7 +586,7 @@ static ssize_t __enc_chunked_read(httpp_encoding_t *self, void *buf, size_t len,
     offset_extentions = -1;
     offset_CR = -1;
     offset_LF = -1;
-    for (i = self->buf_read_raw_offset, c = self->buf_read_raw + self->buf_read_raw_offset;
+    for (i = self->buf_read_raw_offset, c = (char*)self->buf_read_raw + self->buf_read_raw_offset;
          i < self->buf_read_raw_len;
          i++, c++) {
         if (in_quote) {
@@ -620,21 +620,21 @@ static ssize_t __enc_chunked_read(httpp_encoding_t *self, void *buf, size_t len,
      * First pass the extentions to extention parser if any.
      */
     if (offset_extentions != -1)
-        __enc_chunked_read_extentions(self, self->buf_read_raw + offset_extentions, offset_CR - offset_extentions);
+        __enc_chunked_read_extentions(self, (char*)self->buf_read_raw + offset_extentions, offset_CR - offset_extentions);
 
     /* ok. Next we parse the body length.
      * We just replace whatever comes after the length by \0
      * and try to parse the hex value.
      */
     if (offset_extentions != -1) {
-        c = self->buf_read_raw + offset_extentions;
+        c = (char*)self->buf_read_raw + offset_extentions;
     } else {
-        c = self->buf_read_raw + offset_CR;
+        c = (char*)self->buf_read_raw + offset_CR;
     }
     *c = 0;
 
     /* we hope that will work... */
-    if (sscanf(self->buf_read_raw + self->buf_read_raw_offset, "%llx", &bodylen) != 1)
+    if (sscanf((char*)self->buf_read_raw + self->buf_read_raw_offset, "%llx", &bodylen) != 1)
         return -1;
 
     /* ok, Now we move the offset forward to the body. */
@@ -681,7 +681,7 @@ static ssize_t __enc_chunked_read(httpp_encoding_t *self, void *buf, size_t len,
         return -1;
     self->buf_read_decoded_offset = 0;
     self->buf_read_decoded_len = bodylen;
-    memcpy(self->buf_read_decoded, self->buf_read_raw + self->buf_read_raw_offset, bodylen);
+    memcpy(self->buf_read_decoded, (char*)self->buf_read_raw + self->buf_read_raw_offset, bodylen);
     self->buf_read_raw_offset += bodylen;
     self->read_bytes_till_header = 2; /* tailing "\r\n" */
 
@@ -827,8 +827,8 @@ static ssize_t __enc_chunked_write(httpp_encoding_t *self, const void *buf, size
     self->buf_write_encoded_offset = 0;
     self->buf_write_encoded_len = total_chunk_size;
     snprintf(self->buf_write_encoded, total_chunk_size, "%s%s\r\n", encoded_length, extensions ? extensions : "");
-    memcpy(self->buf_write_encoded + header_length, buf, len);
-    memcpy(self->buf_write_encoded + header_length + len, "\r\n\r\n", buf ? 2 : 4);
+    memcpy((char*)self->buf_write_encoded + header_length, buf, len);
+    memcpy((char*)self->buf_write_encoded + header_length + len, "\r\n\r\n", buf ? 2 : 4);
 
     if (extensions)
         free(extensions);
-- 
2.33.0.windows.2

